{"list":[{"title":"本blog文章新建工具","filename":"article-build-tools","content":"本工具基于node,使用\"node createArticle.js\"启动(可能需要sudo权限)，启动后，访问127.0.0.1/add 来添加文章，其中：<br>\r\n * add.tpl为添加操作页面的模板<br>\r\n * indextmp.tpl为首页模板<br>\r\n * template.tpl为文章模板 <br>\r\n * articlelist.json为已建文章列表<br>\r\n\r\n所有文章将被创建到page目录下，同时将更新首页文章列表，并将创建记录存储在articlelist.json文件中.<br>\r\n删除操作只需将page路径下的文章删除，同时删除文章在acticlelist.json中的记录"},{"title":"web性能优化整理","filename":"better-web","content":"抽时间整理了下web性能优化的一些知识点，具体内容见下图<br>\r\n<img src=\"http://ww1.sinaimg.cn/large/e59a5c27jw1esd8cd0hq3j20pi0pbq71.jpg\" style=\"width: 100%;\">"},{"title":"关于HTTP的请求方式","filename":"http-request-types","content":"说到Http请求方式，基本上很多前端都能反应到GET与POST两种，未查资料之前，我也只知道这两种方式，事实上，HTTP协议中处理这两种请求方式之外，还有几种我们作为前端平时见得比较少的方式，以下是这几种方式的说明：<br>\r\n1. GET: 请求获取由Request-URI所标识的资源；<br>\r\n2. POST: 在Request-URI所标识的资源后附加新的数据；<br>\r\n3. HEAD: 请求获取有Request-URI所标识的资源的响应消息报头，可用来获取头信息或元数据；<br>\r\n4. OPTIONS: 请求查询服务器的性能，或查询与资源相关的选项和需求；<br>\r\n5. PUT: 请求服务器存储一个资源，并用Request-URI作为其标识；<br>\r\n6. DELETE: 请求服务器删除有Request-URI所标识的资源；<br>\r\n7. TRACE: 请求服务器回送收到的请求信息，主要用于测试或诊断，就像Ping环回地址检测TCP/IP协议一样。<br>\r\n<br>\r\n以上，如有错误，敬请指出。"}]}